use grad

db.students

db.students.insert([{name: 'Markus', age: 38, dir: 'Miami 138', colors: ['red','blue','green'], accounts: [10,20,30], pets: [{name: 'Marley', especie: 'dog', raza: 'Husky', age:3}]},
{name: 'Armin', age: 39, dir: 'Holland 18', colors: ['yellow','blue','gray'], accounts: [30,40,50], pets: [{name: 'Armada', especie: 'dog', raza: 'Beagle', age:4}]},
{name: 'Ferry', age: 28, dir: 'Minsk 456', colors: ['white','black','blue'], accounts: [11,12,13], pets: [{name: 'Gouryella', especie: 'dog', raza: 'chicane', age: 2}]},
{name: 'John', age: 40, dir: 'manhathan 46', colors: ['purple','cian','green'], accounts: [14,34,80], pets: [{name: 'Askew', especie: 'cat', raza: 'siames', age: 1}]},
{name: 'Nicky', age: 26, dir: 'Arkansas 890', colors: ['brown','black','gray'], accounts: [01,56,90], pets: [{name: 'Rome', especie: 'cat', raza: 'brittish', age: 5}]},
{name: 'Joel', age: 29, dir: 'River 1056', colors: ['black','red','cian'], accounts: [39,123,90], pets: [{name: 'Madden', especie: 'dog', raza: 'pug', age: 8}]},
{name: 'Jordan', age: 25, dir: 'Chicago 490', colors: ['red','white','black'], accounts: [99,88,77], pets: [{name: 'Suckley', especie: 'dog', raza: 'pit bull', age: 7}]},
{name: 'Bryan', age: 25, dir: 'Madisson 123', colors: ['blue','pink','cian'], accounts: [11,56,45], pets:
[{name: 'Kearney', especie: 'cat', raza: 'brittish', age: 1}]},
{name: 'Sean', age: 38, dir: 'New York 444', colors: ['green','orange','pink'], accounts: [00,100,30], pets: [{name: 'Tyas', especie: 'dog', raza: 'bulldog', age: 10}]},
{name: 'Paul', age: 44, dir: 'Arkansas 05', colors: ['yellow','purple','red'], accounts: [77,90,33], pets: [{name: 'Dyk', especie: 'dog', raza: 'pug', age: 3}]}])



*Muestre aquellos documentos que contengan cuentas entre los valores del arreglo entre 20 y 88, odenado por nombre descendente
>>>db.students.find({accounts:{$in: [20, 88]}}).sort({nombre:-1})

*Muestra los documentos que contengan el color red, ordene por edad de manera descendente y imite a 2 registros   -------y su mascota sea menor a 5 aÃ±os
>>>> db.students.find({colors: {$eq: 'red'}}).sort({age:-1}).limit(2)

*Muestre los documentos de los perros que muestre  nombre, direccion, colores, en cuanto a mascotas mostrar el nombre, edad y raza de  manera descendente 
>>>db.students.find({'pets.especie': {$eq:'dog'}},{_id:0,name:1,dir:1,colors:1,'pets:name':1,'pets.age':1,'pets.raza':1}).sort({name:-1})



**********VISTOS EN CLASE**************

> db.users.aggregate([{$match: {type:1}}])
>db.users.aggregate([{$match: {type:1}},{$project:{name:1,type:1,_id:0}}])
>db.users.aggregate([{$match: {type:1}},{$project:{name:1,favorites:1,point:1,_id:0}}])
>db.users.aggregate([{$match: {type:1}},{$project:{name:1,favorites:1,point:1,_id:0}},{$limit:2}])
>db.users.aggregate([{$match: {type:1}},{$project:{name:1,favorites:1,point:1,_id:0}},{$limit:2},{$skip:1}])
<db.users.aggregate([{$match: {type:1}},{$project:{name:1,favorites:1,point:1,_id:0}},{$limit:2},{$skip:1}])
<db.users.aggregate([{$match: {type:1}},{$project:{name:1,favorites:1,points:1,_id:0}},{$unwind:"$points"}])
<db.users.aggregate([{$match: {type:1}},{$project:{name:1,favorites:1,points:1,_id:0}},{$limit:2},{$skip:1},{$unwind:"$points"}])
<db.users.aggregate([{$match: {type:1}},{$project:{name:1,favorites:1,points:1,_id:0}},{$unwind:"$points"}])
< db.users.aggregate([{$match: {type:1}},{$project:{name:1,favorites:1,points:1,_id:0}},{$unwind:"$points"},{$group: {_id:"$name",promPuntos:{$avg:"$points.points"}}}])
<db.users.aggregate([{$match: {type:1}},{$project:{name:1,favorites:1,points:1,_id:0}},{$unwind:"$points"},{$group: {_id:"$favorites.artist",promPuntos:{$avg:"$points.points"}}}])
< db.users.aggregate({$project:{name:1,badges:1,points:1}},{$unwind:"$badges"},{$unwind:"$points"})

> db.users.aggregate({$unwind: "$points"})
db.users.aggregate({$unwind: "$badges"})


> db.users.aggregate({$project:{name:1,badges:1,points:1}},{$unwind:"$badges"},{$unwind:"$points"},{$group:{_id:"$name",sumaPuntos:{$sum:"$points.bonus"}}})
{ "_id" : "abc", "sumaPuntos" : 30 }
{ "_id" : "xyz", "sumaPuntos" : 20 }
{ "_id" : "xi", "sumaPuntos" : 60 }
{ "_id" : "sue", "sumaPuntos" : 60 }
{ "_id" : "bob", "sumaPuntos" : 32 }
{ "_id" : "ahn", "sumaPuntos" : 56 }
> 

*OUT
> db.users.aggregate({$project:{name:1,badges:1,points:1}},{$unwind:"$badges"},{$unwind:"$points"},{$group:{_id:"$name",sumaPuntos:{$sum:"$points.bonus"}}},{$out:"shalala"})s
> db.shalala.find()

*COUNT
<db.users.aggregate({$project:{name:1,badges:1,points:1}},{$unwind:"$badges"},{$unwind:"$points"},{$group:{_id:"$name",sumaPuntos:{$sum:"$points.bonus"}}},{$count:"sha"})

*


